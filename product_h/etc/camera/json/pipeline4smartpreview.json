{
    "imports" : [
        "/system_ext/lib64/libhwfilter_qcom.so"
    ],

    "filters" :
    [
        {
            "id" : "src",
            "type" : "camerasource",
            "previewQueueLength" : 16
        },
        {
            "id" : "preview",
            "type" : "preview"
        },
        {
            "id" : "bridgesink",
            "type" : "bridgesink"
        },
        {
            "id" : "IppAlgo",
            "type" : "IppAlgoFilter"
        },
        {
            "id" : "ColorEffect",
            "type" : "ColorEffect",
            "platform" : "qcom"
        },
        {
            "id" : "peekerMeta",
            "type" : "peek"
        },
        {
            "id" : "peekPreview",
            "type" : "peek"
        },
        {
            "id" : "metadata",
            "type" : "qcom_metadata_extractor"
        },
        {
            "id" : "HwExifIpp",
            "type" : "HwExifIpp"
        }
    ],

    "connections" :
    [
        {
            "from" :
            {
                "filter" : "src",
                "port" : "out0"
            },

            "to" :
            {
                "filter" : "peekPreview",
                "port" : "in"
            }
        },

        {
            "from" :
            {
                "filter" : "peekPreview",
                "port" : "out"
            },

            "to" :
            {
                "filter" : "ColorEffect",
                "port" : "in"
            }
        },

        {
            "from" :
            {
                "filter" : "ColorEffect",
                "port" : "out"
            },

        "to" :
            {
                "filter" : "HwExifIpp",
                "port" : "in"
            }
        },

       {
            "from" :
            {
                "filter" : "HwExifIpp",
                "port" : "out"
            },

            "to" :
            {
                "filter" : "preview",
                "port" : "in"
            }
        },

        {
            "from" :
            {
                "filter" : "peekPreview",
                "port" : "peek0"
            },

            "to" :
            {
                "filter" : "IppAlgo",
                "port" : "in"
            }
        },


        {
            "from" :
            {
                "filter" : "src",
                "port" : "out_meta"
            },

            "to" :
            {
                "filter" : "peekerMeta",
                "port" : "in"
            }
        },

        {
            "from" :
            {
                "filter" : "peekerMeta",
                "port" : "out"
            },

            "to" :
            {
                "filter" : "preview",
                "port" : "in_meta"
            }
        },

        {
            "from" :
            {
                "filter" : "peekerMeta",
                "port" : "peek0"
            },

            "to" :
            {
                "filter" : "metadata",
                "port" : "in"
            }
        },

        {
            "from" :
            {
                "filter" : "metadata",
                "port" : "out"
            },

            "to" :
            {
                "filter" : "IppAlgo",
                "port" : "InMeta"
            }
        },

        {
            "from" :
            {
                "filter" : "IppAlgo",
                "port" : "OutMeta"
            },

            "to" :
            {
                "filter" : "ColorEffect",
                "port" : "InMeta"
            }
        },

        {
            "from" :
            {
                "filter" : "ColorEffect",
                "port" : "OutMeta"
            },

            "to" :
            {
                "filter" : "HwExifIpp",
                "port" : "InMeta"
            }
        },

        {
            "from" :
            {
                "filter" : "HwExifIpp",
                "port" : "OutMeta"
            },

            "to" :
            {
                "filter" : "bridgesink",
                "port" : "in_meta"
            }
        },

        {
            "from" :
            {
                "filter" : "src",
                "port" : "out_cap0"
            },

            "to" :
            {
                "filter" : "bridgesink",
                "port" : "in0"
            }
        }
    ]
}

